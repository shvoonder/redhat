kind: Deployment
apiVersion: apps/v1
metadata:
  name: frontend
  labels:
    app: frontend
    app.kubernetes.io/component: frontend
    app.kubernetes.io/instance: frontend
    app.kubernetes.io/name: frontend
    app.kubernetes.io/part-of: api-workshop
    app.openshift.io/runtime: nginx 
    app.openshift.io/runtime-namespace: api-workshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        deployment: frontend
    spec:
      containers:
        - resources:
            requests:
              cpu: 150m
              memory: 128Mi
            limits: {}
          readinessProbe:
            httpGet:
              path: /probes/readiness
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: frontend
          livenessProbe:
            httpGet:
              path: /probes/liveness
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          envFrom:
          - configMapRef:
              name: app-environment
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
         # Update with your image name
         image: 'quay.io/shvoonder/frontend:v1'
         #
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 1
  progressDeadlineSeconds: 600